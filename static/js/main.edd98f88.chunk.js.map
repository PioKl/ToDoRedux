{"version":3,"sources":["reducers/task.reducer.js","reducers/filter.reducer.js","reducers/filterByCategory.reducer.js","reducers/filterSearch.reducer.js","reducers/index.js","contexts/EditContext.js","contexts/CreateTaskContext.js","components/AddTask.js","actions/task.actions.js","components/Task.js","components/TaskEdited.js","components/TaskList.js","components/Filters.js","actions/filter.actions.js","actions/filterByCategory.actions.js","actions/filterSearch.actions.js","components/Footer.js","components/App.js","serviceWorker.js","index.js","localStorage.js"],"names":["tasks","state","action","type","id","title","description","category","completed","edited","filter","task","map","filters","filterByCategory","searchs","combineReducers","EditContext","createContext","EditContextProvider","props","useState","isEdited","setIsEdited","Provider","value","children","CreateTaskContext","CreateTaskContextProvider","isTaskCreated","setIsTaskCreated","connect","dispatch","addTask","uuid","setTitle","setDescription","setCategory","useContext","className","onSubmit","e","preventDefault","placeholder","slice","onChange","target","required","maxLength","rows","onClick","deleteTask","completeTask","editTask","style","textDecoration","saveEditTask","editedTitle","editedDescription","editedCategory","setEditedTitle","setEditedDescription","setEditedCategory","defaultValue","filterTasks","toLowerCase","includes","key","showAll","showCompleted","showNotCompleted","showByCategory","searchTask","searchedTitle","categoryToFilter","setCategoryToFilter","search","setSearch","showCategoryFilters","setShowCategoryFilters","handleCategory","currentTarget","getAttribute","useEffect","display","disabled","toUpperCase","Footer","App","Boolean","window","location","hostname","match","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","rootReducer","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.edd98f88.chunk.js","sourcesContent":["\r\nconst tasks = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"ADD_TASK\":\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: action.id,\r\n                    title: action.title,\r\n                    description: action.description,\r\n                    category: action.category,\r\n                    completed: action.completed,\r\n                    edited: action.edited,\r\n                }\r\n            ];\r\n        case \"REMOVE_TASK\":\r\n            return state.filter(task => task.id !== action.id)\r\n        case \"COMPLETE_TASK\":\r\n            return state.map(task => {\r\n                return {\r\n                    /*id: task.id,\r\n                     title: task.title,\r\n                     description: task.description, */\r\n                    ...task, //wszystko co znajduje sie w obiekcie zamiast przepisywac jak powyzej\r\n                    completed: task.id === action.id ? !task.completed : task.completed\r\n                }\r\n            })\r\n        case \"EDIT_TASK\":\r\n            //{ ...task, edited: false } zeby zapobiec błędowi podczas odświeżenia w panelu edycji, jeśli odświeżę w trakcie panelu edycji i wejde w edycje kolejnego tasku, to w panelu mogą pojawić się dwa taski do edycji\r\n            return state.map((task) => task.id === action.id ? { ...task, edited: true } : { ...task, edited: false })\r\n        case \"SAVE_EDIT_TASK\":\r\n            return state.map((task) => {\r\n                if (task.id === action.id) {\r\n                    return {\r\n                        ...task,\r\n                        title: action.title,\r\n                        description: action.description,\r\n                        category: action.category,\r\n                        edited: false,\r\n                    }\r\n                }\r\n                else return task\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default tasks;","const filters = (state = \"SHOW_ALL\", action) => {\r\n    switch (action.type) {\r\n        case \"SHOW_ALL\":\r\n            return action.filter\r\n        case \"SHOW_COMPLETED\":\r\n            return action.filter\r\n        case \"SHOW_NOTCOMPLETED\":\r\n            return action.filter\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default filters","const filterByCategory = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"SHOW_BYCATEGORY\":\r\n            return action.filter;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default filterByCategory","const searchs = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"SEARCH_TASK\":\r\n            return action.title\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default searchs;","import { combineReducers } from \"redux\";\r\nimport tasks from \"./task.reducer\";\r\nimport filters from \"./filter.reducer\";\r\nimport filterByCategory from \"./filterByCategory.reducer\";\r\nimport searchs from \"./filterSearch.reducer\";\r\n\r\nexport default combineReducers({\r\n    tasks, filters, filterByCategory, searchs\r\n});","import React, { createContext, useState } from 'react';\r\n\r\nexport const EditContext = createContext();\r\n\r\nconst EditContextProvider = (props) => {\r\n    const [isEdited, setIsEdited] = useState(false)\r\n\r\n\r\n    return (\r\n        <EditContext.Provider value={{ isEdited, setIsEdited }}>\r\n            {props.children}\r\n        </EditContext.Provider>\r\n    )\r\n}\r\n\r\nexport default EditContextProvider;","import React, { createContext, useState } from 'react';\r\n\r\nexport const CreateTaskContext = createContext();\r\n\r\nconst CreateTaskContextProvider = (props) => {\r\n    const [isTaskCreated, setIsTaskCreated] = useState(false)\r\n\r\n\r\n    return (\r\n        <CreateTaskContext.Provider value={{ isTaskCreated, setIsTaskCreated }}>\r\n            {props.children}\r\n        </CreateTaskContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CreateTaskContextProvider;","import React, { useState, useContext } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { addTask } from \"../actions/task.actions\";\r\nimport { EditContext } from '../contexts/EditContext';\r\nimport { CreateTaskContext } from '../contexts/CreateTaskContext';\r\nimport \"../style/AddTask.scss\";\r\n\r\nconst AddTask = ({ addTask }) => {\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState(\"normal\");\r\n    const { isEdited } = useContext(EditContext);\r\n    const { isTaskCreated, setIsTaskCreated } = useContext(CreateTaskContext);\r\n\r\n    const handleTitle = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n    const handleAddTask = (e) => {\r\n        e.preventDefault();\r\n        if (title !== \"\") {\r\n            addTask(title, description, category);\r\n            setTitle(\"\");\r\n            setDescription(\"\");\r\n            setIsTaskCreated(false);\r\n        }\r\n    }\r\n    const handleCancel = () => {\r\n        setIsTaskCreated(false);\r\n    }\r\n    return (\r\n        <>\r\n            {isEdited ? null :\r\n                <>\r\n                    {isTaskCreated ?\r\n                        <div className=\"newTaskContainer\">\r\n                            <form className=\"addTask\" onSubmit={handleAddTask}>\r\n                                <h1 className=\"addTask__heading\">Title</h1>\r\n                                <input className=\"addTask__input addTask__input--title\" type=\"text\" placeholder=\"title\" value={title.slice(0, 20)} onChange={handleTitle} required />\r\n                                <h1 className=\"addTask__heading\">Description</h1>\r\n                                <textarea className=\"addTask__input addTask__input--description\" type=\"text\" maxLength=\"50\" rows=\"3\" placeholder=\"description\" value={description.slice(0, 50)} onChange={(e) => setDescription(e.target.value)} />\r\n                                <h1 className=\"addTask__heading\">Category</h1>\r\n                                <div className=\"addTask__categoriesButtons\">\r\n                                    <button\r\n                                        className={`addTask__categoryButton ${category === \"normal\" && \"addTask__categoryButton--active\"}`}\r\n                                        onClick={(e) => { e.preventDefault(); setCategory(e.target.value) }}\r\n                                        value=\"normal\" title=\"Normal\">Normal\r\n                                        </button>\r\n                                    <button\r\n                                        className={`addTask__categoryButton ${category === \"shopping\" && \"addTask__categoryButton--active\"}`}\r\n                                        onClick={(e) => { e.preventDefault(); setCategory(e.target.value) }}\r\n                                        value=\"shopping\" title=\"Shopping\">Shopping</button>\r\n                                    <button\r\n                                        className={`addTask__categoryButton ${category === \"food\" &&\r\n                                            \"addTask__categoryButton--active\"}`}\r\n                                        onClick={(e) => { e.preventDefault(); setCategory(e.target.value) }}\r\n                                        value=\"food\" title=\"Food\">Food</button>\r\n                                    <button\r\n                                        className={`addTask__categoryButton ${category === \"training\" && \"addTask__categoryButton--active\"}`}\r\n                                        onClick={(e) => { e.preventDefault(); setCategory(e.target.value) }}\r\n                                        value=\"training\" title=\"Training\">Training</button>\r\n                                </div>\r\n                                <div className=\"addTask__finishButtons\">\r\n                                    <button className=\"addTask__finishButton addTask__finishButton--submit\" type=\"submit\" title=\"Add Task\">Add Task</button>\r\n                                    <button type=\"button\" className=\"addTask__finishButton addTask__finishButton--cancel\" onClick={handleCancel} title=\"Cancel\">Cancel</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </>\r\n            }\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addTask: (title, description, category) => dispatch(addTask(title, description, category)),\r\n});\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(AddTask);","import uuid from \"uuid/dist/v1\";\r\n//let nextTask = 0;\r\n\r\nexport const addTask = (title, description, category) => ({\r\n    type: \"ADD_TASK\",\r\n    //id: nextTask++,\r\n    id: uuid(),\r\n    title: title,\r\n    description: description,\r\n    category: category,\r\n    completed: false,\r\n    edited: false,\r\n})\r\n\r\nexport const deleteTask = (id) => ({\r\n    type: \"REMOVE_TASK\",\r\n    id,\r\n})\r\n\r\nexport const completeTask = (id) => ({\r\n    type: \"COMPLETE_TASK\",\r\n    id,\r\n})\r\n\r\nexport const editTask = (id) => ({\r\n    type: \"EDIT_TASK\",\r\n    id,\r\n})\r\n\r\nexport const saveEditTask = (id, editedTitle, editedDescription, editedCategory) => ({\r\n    type: \"SAVE_EDIT_TASK\",\r\n    id,\r\n    title: editedTitle,\r\n    description: editedDescription,\r\n    category: editedCategory,\r\n})\r\n","import React, { useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTask, completeTask, editTask } from \"../actions/task.actions\";\r\nimport { EditContext } from '../contexts/EditContext';\r\nimport \"../style/Task.scss\";\r\nconst Task = ({ task, deleteTask, completeTask, editTask }) => {\r\n    const { title, description, category, id, completed } = task;\r\n    const { setIsEdited } = useContext(EditContext);\r\n    const handleCheck = () => {\r\n        completeTask(id)\r\n    }\r\n    const handleDelete = () => {\r\n        deleteTask(id)\r\n    }\r\n    const handleEditTask = () => {\r\n        setIsEdited(true);\r\n        editTask(id)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <li className=\"task__item\">\r\n                <span className={`task__circle task__circle--${category} ${completed && \"task__circle--completed\"}`}></span>\r\n                <span className={`task__checked ${completed ? \"task__checked--complete\" : \"task__checked--notComplete\"}`}></span>\r\n                <div title={`${completed ? \"uncomplete task\" : \"complete task\"}`} onClick={handleCheck} className=\"task__specification\">\r\n                    <p className=\"task__info task__info--title\" style={{ textDecoration: completed ? \"line-through\" : \"none\" }} >{title}</p>\r\n                    {description ? <p style={{ textDecoration: completed ? \"line-through\" : \"none\" }} className=\"task__info task__info--description\">{description}</p> : null}\r\n                    <p style={{ textDecoration: completed ? \"line-through\" : \"none\" }} className=\"task__info task__info--category\">{category}</p>\r\n                </div>\r\n                <div className=\"task__buttons\">\r\n                    <button title=\"delete task\" className=\"task__button task__button--delete\" onClick={handleDelete}></button>\r\n                    <button title=\"edit task\" className=\"task__button task__button--edit\" onClick={handleEditTask}></button>\r\n                </div>\r\n            </li>\r\n        </>\r\n    );\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteTask: (id) => dispatch(deleteTask(id)),\r\n    completeTask: (id) => dispatch(completeTask(id)),\r\n    editTask: (id) => dispatch(editTask(id)),\r\n});\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Task);","import React, { useState, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { EditContext } from '../contexts/EditContext';\r\nimport { saveEditTask } from \"../actions/task.actions\";\r\nimport \"../style/TaskEdited.scss\";\r\nconst Task = ({ task, saveEditTask }) => {\r\n    const { title, description, category, id } = task;\r\n    const { setIsEdited } = useContext(EditContext);\r\n    const [editedTitle, setEditedTitle] = useState('');\r\n    const [editedDescription, setEditedDescription] = useState('');\r\n    const [editedCategory, setEditedCategory] = useState(category);\r\n\r\n    const handleEditedTitle = (e) => {\r\n        setEditedTitle(e.target.value);\r\n    }\r\n    const handleSaveEditedTask = (e) => {\r\n        e.preventDefault();\r\n        //editedTitle ? editedTitle : title - jeśli editedTitle nie jest pusty, czyl użytkownik coś zmienił to użyj nowego tytułu, a jeśli nie to niech dalej będzie używany stary\r\n        saveEditTask(id, editedTitle ? editedTitle : title, editedDescription ? editedDescription : description, editedCategory);\r\n        /* ponizej do rozwiazania z select i options, useState wtedy jest useState=('') */\r\n        /*         saveEditTask(id, editedTitle ? editedTitle : title, editedDescription ? editedDescription : description, editedCategory ? editedCategory : category); */\r\n        setIsEdited(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"editTaskContainer\">\r\n            <form className=\"editTask\" onSubmit={handleSaveEditedTask}>\r\n                <h1 className=\"editTask__heading\">Title</h1>\r\n                <input className=\"editTask__input editTask__input--title\" maxLength=\"20\" type=\"text\" placeholder={title} onChange={handleEditedTitle} defaultValue={title.slice(0, 20)} />\r\n                <h1 className=\"editTask__heading\">Description</h1>\r\n                <textarea className=\"editTask__input editTask__input--description\" maxLength=\"50\" rows=\"3\" placeholder={description} defaultValue={description} onChange={(e) => setEditedDescription(e.target.value.slice(0, 50))} />\r\n                <h1 className=\"editTask__heading\">Category</h1>\r\n                <div className=\"editTask__categoriesButtons\">\r\n                    <button\r\n                        className={`editTask__categoryButton ${editedCategory === \"normal\" && \"editTask__categoryButton--active\"}`}\r\n                        onClick={(e) => { e.preventDefault(); setEditedCategory(e.target.value) }}\r\n                        value=\"normal\" title=\"Normal\">Normal\r\n                    </button>\r\n                    <button\r\n                        className={`editTask__categoryButton ${editedCategory === \"shopping\" && \"editTask__categoryButton--active\"}`}\r\n                        onClick={(e) => { e.preventDefault(); setEditedCategory(e.target.value) }}\r\n                        value=\"shopping\" title=\"Shopping\">Shopping</button>\r\n                    <button\r\n                        className={`editTask__categoryButton ${editedCategory === \"food\" &&\r\n                            \"editTask__categoryButton--active\"}`}\r\n                        onClick={(e) => { e.preventDefault(); setEditedCategory(e.target.value) }}\r\n                        value=\"food\" title=\"Food\">Food</button>\r\n                    <button\r\n                        className={`editTask__categoryButton ${editedCategory === \"training\" && \"editTask__categoryButton--active\"}`}\r\n                        onClick={(e) => { e.preventDefault(); setEditedCategory(e.target.value) }}\r\n                        value=\"training\" title=\"Training\">Training</button>\r\n                </div>\r\n                <button className=\"editTask__save\" title=\"Save\" type=\"submit\" value=\"Save\">Save</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    saveEditTask: (id, title, description, category) => dispatch(saveEditTask(id, title, description, category))\r\n});\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Task);","import React, { useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Task from './Task';\r\nimport TaskEdited from './TaskEdited';\r\nimport { EditContext } from '../contexts/EditContext';\r\nimport { CreateTaskContext } from '../contexts/CreateTaskContext';\r\nimport \"../style/TaskList.scss\";\r\nconst TaskList = ({ tasks }) => {\r\n    const { isEdited } = useContext(EditContext);\r\n    const { isTaskCreated } = useContext(CreateTaskContext);\r\n    return (\r\n        <>\r\n\r\n\r\n            {isTaskCreated ? null :\r\n                <div className=\"tasks\">\r\n                    {isEdited ?\r\n                        <>\r\n                            {/* isEdited jest po to aby zlikwidowac problem pojawienia sie razem panelu zapisu i tasków, wówczas gdy użytkownik będąc w panelu edycji odświeży stronę, a nie wykorzysta opcji zapisz */}\r\n                            {tasks.map(task => (\r\n                                <div className=\"tasks_itemEditContainer\" key={task.id}>\r\n                                    {task.edited && <TaskEdited key={task.id} task={task} />}\r\n                                </div>\r\n                            ))}\r\n                        </>\r\n                        :\r\n                        <ul className=\"tasks__list\">\r\n                            {tasks.map(task => (\r\n                                <div className={`tasks__itemContainer ${task.completed && `tasks__itemContainer--completed`}`} key={task.id}>\r\n                                    <Task key={task.id} task={task} />\r\n                                </div>\r\n                            ))}\r\n                        </ul>\r\n                    }\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nconst filterTasks = (tasks, filters, filterByCategory, searchs) => {\r\n    switch (filters) {\r\n        case \"SHOW_ALL\":\r\n            switch (filterByCategory) {\r\n                case \"allCategories\":\r\n                    return tasks.filter(task => task && task.title.toLowerCase().includes(searchs.toLowerCase()));\r\n                case \"normal\":\r\n                    return tasks.filter(task => task.category === \"normal\" && task.title.toLowerCase().includes(searchs.toLowerCase()));\r\n                case \"shopping\":\r\n                    return tasks.filter(task => task.category === \"shopping\" && task.title.toLowerCase().includes(searchs.toLowerCase()));\r\n                case \"food\":\r\n                    return tasks.filter(task => task.category === \"food\" && task.title.toLowerCase().includes(searchs.toLowerCase()));\r\n                case \"training\":\r\n                    return tasks.filter(task => task.category === \"training\" && task.title.toLowerCase().includes(searchs.toLowerCase()));\r\n                default: return tasks;\r\n            }\r\n        case \"SHOW_NOTCOMPLETED\":\r\n            switch (filterByCategory) {\r\n                case \"allCategories\":\r\n                    return tasks.filter(task => task.completed === false && task.title.toLowerCase().includes(searchs.toLowerCase()));\r\n                case \"normal\":\r\n                    return tasks.filter(task => task.completed === false && task.category === \"normal\" && task.title.toLowerCase().includes(searchs.toLowerCase()))\r\n                case \"shopping\":\r\n                    return tasks.filter(task => task.completed === false && task.category === \"shopping\" && task.title.toLowerCase().includes(searchs.toLowerCase()));\r\n                case \"food\":\r\n                    return tasks.filter(task => task.completed === false && task.category === \"food\" && task.title.toLowerCase().includes(searchs.toLowerCase()));\r\n                case \"training\":\r\n                    return tasks.filter(task => task.completed === false && task.category === \"training\" && task.title.toLowerCase().includes(searchs.toLowerCase()))\r\n                default:\r\n                    return tasks;\r\n            }\r\n        case \"SHOW_COMPLETED\":\r\n            switch (filterByCategory) {\r\n                case \"allCategories\":\r\n                    return tasks.filter(task => task.completed === true && task.title.toLowerCase().includes(searchs.toLowerCase()));\r\n                case \"normal\":\r\n                    return tasks.filter(task => task.completed === true && task.category === \"normal\" && task.title.toLowerCase().includes(searchs.toLowerCase()))\r\n                case \"shopping\":\r\n                    return tasks.filter(task => task.completed === true && task.category === \"shopping\" && task.title.toLowerCase().includes(searchs.toLowerCase()));\r\n                case \"food\":\r\n                    return tasks.filter(task => task.completed === true && task.category === \"food\" && task.title.toLowerCase().includes(searchs.toLowerCase()));\r\n                case \"training\":\r\n                    return tasks.filter(task => task.completed === true && task.category === \"training\" && task.title.toLowerCase().includes(searchs.toLowerCase()));\r\n                default:\r\n                    return tasks;\r\n            }\r\n        default:\r\n            return tasks\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    tasks: filterTasks(state.tasks, state.filters, state.filterByCategory, state.searchs)\r\n})\r\nexport default connect(mapStateToProps)(TaskList);\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { showAll, showCompleted, showNotCompleted } from \"../actions/filter.actions\";\r\nimport { showByCategory } from \"../actions/filterByCategory.actions\"\r\nimport { searchTask } from \"../actions/filterSearch.actions\"\r\nimport { EditContext } from '../contexts/EditContext';\r\nimport { CreateTaskContext } from '../contexts/CreateTaskContext';\r\nimport \"../style/Filters.scss\";\r\nconst Filters = ({ showAll, showCompleted, showNotCompleted, showByCategory, filters, searchTask }) => {\r\n\r\n    const [categoryToFilter, setCategoryToFilter] = useState(\"allCategories\");\r\n    const [search, setSearch] = useState('')\r\n    const { isEdited } = useContext(EditContext);\r\n    const { isTaskCreated } = useContext(CreateTaskContext);\r\n    const [showCategoryFilters, setShowCategoryFilters] = useState(false);\r\n\r\n    const handleAll = (e) => {\r\n        showAll(e.target.value)\r\n    }\r\n    const handleCompleted = (e) => {\r\n        showCompleted(e.target.value)\r\n    }\r\n    const handleNotCompleted = (e) => {\r\n        showNotCompleted(e.target.value)\r\n    }\r\n\r\n    const handleOpenCategoriesFilter = () => {\r\n        setShowCategoryFilters(!showCategoryFilters)\r\n    }\r\n\r\n    const handleCategory = (e) => {\r\n        setCategoryToFilter(e.currentTarget.getAttribute(\"value\"));\r\n        setShowCategoryFilters(false);\r\n    }\r\n\r\n    const handleSearch = (e) => {\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        showByCategory(categoryToFilter);\r\n        searchTask(search);\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"filters\" style={{ display: isEdited || isTaskCreated ? 'none' : 'inline' }}>\r\n                <div className=\"filters__search-filter\">\r\n                    <i className=\"filters__search-icon fas fa-search\"></i>\r\n                    <input className=\"filters__search-input\" type=\"text\" value={search} onChange={handleSearch} />\r\n                </div>\r\n                <div className=\"filters__showing-filters\">\r\n                    <button className=\"filters__showing-button filters__showing-button--showAll\" value=\"SHOW_ALL\" disabled={filters === \"SHOW_ALL\" ? true : false} onClick={handleAll}>All</button>\r\n                    <button className=\"filters__showing-button filters__showing-button--showNotCompleted\" value=\"SHOW_NOTCOMPLETED\" disabled={filters === \"SHOW_NOTCOMPLETED\" ? true : false} onClick={handleNotCompleted}>Not Completed</button>\r\n                    <button className=\"filters__showing-button filters__showing-button--showCompleted\" value=\"SHOW_COMPLETED\" disabled={filters === \"SHOW_COMPLETED\" ? true : false} onClick={handleCompleted}>Completed</button>\r\n                </div>\r\n\r\n                <div className=\"filters__category-filters\">\r\n                    <button className={`filters__category-title ${showCategoryFilters ? \"filters__category-title--active\" : \"filters__category-title--inActive\"}`} onClick={handleOpenCategoriesFilter}>Show Categories: {categoryToFilter === \"allCategories\" ? \"All Categories\" : categoryToFilter[0].toUpperCase() + categoryToFilter.slice(1)}</button>\r\n                    <ul style={{ display: showCategoryFilters ? 'flex' : 'none' }} className=\"filters__category-list\">\r\n                        <li onClick={handleCategory} className={`filters__category-item filters__category-item--allCategories\r\n                        ${categoryToFilter === \"allCategories\" ? \"active\" : \"non-active\"}`} value=\"allCategories\">All Categories</li>\r\n                        <li onClick={handleCategory} className={`filters__category-item filters__category-item--normal \r\n                        ${categoryToFilter === \"normal\" ? \"active\" : \"non-active\"}`} value=\"normal\">Normal</li>\r\n                        <li onClick={handleCategory} className={`filters__category-item filters__category-item--shopping \r\n                        ${categoryToFilter === \"shopping\" ? \"active\" : \"non-active\"}`} value=\"shopping\">Shopping</li>\r\n                        <li onClick={handleCategory} className={`filters__category-item filters__category-item--food\r\n                        ${categoryToFilter === \"food\" ? \"active\" : \"non-active\"}`} value=\"food\">Food</li>\r\n                        <li onClick={handleCategory} className={`filters__category-item filters__category-item--training \r\n                        ${categoryToFilter === \"training\" ? \"active\" : \"non-active\"}`} value=\"training\">Training</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    filters: state.filters\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    showAll: (filter) => dispatch(showAll(filter)),\r\n    showCompleted: (filter) => dispatch(showCompleted(filter)),\r\n    showNotCompleted: (filter) => dispatch(showNotCompleted(filter)),\r\n    showByCategory: (filter) => dispatch(showByCategory(filter)),\r\n    searchTask: (searchedTitle) => dispatch(searchTask(searchedTitle)),\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters);","export const showAll = (filter) => ({\r\n    type: \"SHOW_ALL\",\r\n    filter: filter,\r\n})\r\n\r\nexport const showCompleted = (filter) => ({\r\n    type: \"SHOW_COMPLETED\",\r\n    filter: filter,\r\n})\r\n\r\nexport const showNotCompleted = (filter) => ({\r\n    type: \"SHOW_NOTCOMPLETED\",\r\n    filter: filter,\r\n})\r\n","export const showByCategory = (filter) => ({\r\n    type: \"SHOW_BYCATEGORY\",\r\n    filter: filter,\r\n})\r\n","export const searchTask = (title) => ({\r\n    type: \"SEARCH_TASK\",\r\n    title,\r\n})","import React, { useContext } from 'react';\r\nimport '../style/Footer.scss';\r\nimport { CreateTaskContext } from '../contexts/CreateTaskContext';\r\nimport { EditContext } from '../contexts/EditContext';\r\nconst Footer = () => {\r\n    const { isTaskCreated, setIsTaskCreated } = useContext(CreateTaskContext);\r\n    const { isEdited } = useContext(EditContext);\r\n    const handleCreateTask = () => {\r\n        setIsTaskCreated(true);\r\n    }\r\n    return (\r\n        <>\r\n            {(isTaskCreated || isEdited) ? null\r\n                :\r\n                <footer className=\"footer\">\r\n                    <div className=\"create-newTask\" onClick={handleCreateTask}>\r\n                        <button title=\"Create New Task\" className=\"create-newTask__button\"><i className=\"fas fa-plus create-newTask__button--plusIcon\"></i></button>\r\n                    </div>\r\n                </footer>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport '../style/App.scss';\nimport AddTask from './AddTask';\nimport TaskList from './TaskList';\nimport Filters from './Filters';\nimport EditContextProvider from '../contexts/EditContext';\nimport CreateTaskContextProvider from '../contexts/CreateTaskContext';\nimport Footer from \"./Footer\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n      </header>\n      <CreateTaskContextProvider>\n        <EditContextProvider>\n          <main>\n            <Filters />\n            <AddTask />\n            <TaskList />\n          </main>\n          <Footer />\n        </EditContextProvider>\n      </CreateTaskContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { loadState, saveState } from \"./localStorage\";\nimport throttle from 'lodash/throttle';\n\nimport rootReducer from \"./reducers\";\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n//const store = createStore(rootReducer);\n\n//Rozwiazanie z localStorage na podstawie\n//https://egghead.io/lessons/javascript-redux-persisting-the-state-to-the-local-storage\n//https://medium.com/@jrcreencia/persisting-redux-state-to-local-storage-f81eb0b90e7e\nconst persistedState = loadState();\nconst store = createStore(\n  rootReducer,\n  persistedState\n);\nstore.subscribe(throttle(() => {\n  saveState({\n    tasks: store.getState().tasks\n  });\n}, 1000));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('state');\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch {\r\n        // ignore write errors\r\n    }\r\n};"],"sourceRoot":""}